// Copyright (c) 2012 CoNarrative - http://www.conarrative.com/
// License: MIT (http://www.opensource.org/licenses/mit-license.php)
// GluJS version 1.1.0
Ext.reg||(Ext.reg=function(name,ctor){Ext.ClassManager.setAlias("widgets."+name,ctor)},Ext.grid.CheckboxSelectionModel=Ext.selection.CheckboxModel,Ext.grid.RowSelectionModel=Ext.selection.RowModel),Ext.getVersion||(Ext.getVersion=function(){return Ext.version}),Ext.getProvider||(Ext.getProvider=function(){return{provider:"extjs"}}),Ext.ns("glu.provider.binder"),Ext.apply(glu.provider.binder,{getAdapter:function(config){if(config.ptype)return glu.provider.adapters.ptype;var xtype=config.xtype,adapter=null;do if(adapter=glu.provider.adapters[xtype],!adapter)if(Ext.getVersion().major>3||"touch"==Ext.getProvider().provider){var currentType=Ext.ClassManager.getByAlias("widget."+xtype);if(!currentType)throw xtype+" is not a valid xtype";xtype=currentType.superclass.xtype}else{var currentType=Ext.ComponentMgr.types[xtype];if(!currentType)throw xtype+" is not a valid xtype";xtype=currentType.superclass.constructor.xtype}while(!adapter);return xtype!=config.xtype&&glu.log.debug("No exact binding adaptor for "+config.xtype+"; using adapter for "+xtype+" instead."),this.initAdapter(adapter)},initAdapter:function(adapterDef){if(adapterDef.initialized)return adapterDef;var ns=glu.provider.adapters,name=adapterDef.name;if(adapterDef.extend){var child=ns[adapterDef.extend];this.initAdapter(child)}adapterDef.extend&&-1==adapterDef.extend.indexOf(".")&&(adapterDef.extend="glu.provider.adapters."+glu.symbol(adapterDef.extend).toPascalCase());var className="glu.provider.adapters."+glu.symbol(name).toPascalCase(),adapterClass=glu.define(className,adapterDef),adapter=new adapterClass;return ns[name]=adapter,adapter.name=name,adapter.initAdapter&&adapter.initAdapter(),adapter.initialized=!0,adapter},isRegistered:function(xtype){return Ext.ComponentMgr.isRegistered(xtype)||(Ext.getVersion().major>3||"touch"==Ext.getProvider().provider)&&""!==Ext.ClassManager.getNameByAlias("widget."+xtype)}}),Ext.ns("glu.provider.binder"),Ext.apply(glu.provider.binder,{applyBindingsList:function(configList){for(var i=0;configList.length>i;i++){var config=configList[i];this.applyAllBindingsToAControl(config)}},applyAllBindingsToAControl:function(config){if(config.hasOwnProperty("_bindings")){var control=Ext.getCmp(config.id),bindingAdapter=config._bindings.adapter;if(void 0===control&&(bindingAdapter.findControl&&(control=bindingAdapter.findControl(config)),void 0===control))return glu.log.warn("unable to find and apply bindings to control "+config.id),void 0;if(null==control._private||1!=control._private.isBound){glu.log.indentMore(),glu.log.debug(glu.log.indent+"APPLYING bindings for {xtype: "+control.xtype+"}"),control._private=control._private||{},control._private.isBound=!0,new glu.GraphObservable({node:control}),control._vm=config._bindings.defaultModel,control.on("destroy",function(cntrl){cntrl._ob.detach("_vm")});for(var bindings=config._bindings,i=0;bindings.length>i;i++){var binding=bindings[i];this.applyOneBindingToControl(bindingAdapter,config,control,binding)}control.fireEvent&&control.fireEvent("glubind",control),glu.log.indentLess()}}},applyOneBindingToControl:function(bindingAdapter,config,control,binding){var propBindings=bindingAdapter[binding.controlPropName+"Bindings"]||{};if(propBindings&&glu.isFunction(propBindings.custom)){var handledCustom=propBindings.custom({binding:binding,config:config,viewmodel:binding.model,control:control});if(handledCustom!==!1)return}null!=binding.model.on&&this.applyPropBindingToControl(bindingAdapter,config,binding.model,control,binding,propBindings),propBindings&&propBindings.onInit&&propBindings.onInit.call(binding.model,binding,control),void 0===propBindings||propBindings.suppressViewmodelUpdate||void 0===propBindings.eventName||(glu.log.debug("LISTENING on control property "+propBindings.eventName),control.on(propBindings.eventName,function(){var adaptedValue=propBindings.eventConverter.apply(bindingAdapter,arguments);binding.invertValue&&(adaptedValue=!adaptedValue),glu.log.info(glu.symbol("USER changed {0}.{1}").format(""+binding.model,binding.modelPropName)),binding.model.set.call(this,binding.modelPropName,adaptedValue)},binding.model))},applyPropBindingToControl:function(bindingAdapter,config,viewmodel,theControl,binding,propBindings){glu.testMode&&viewmodel.registerControlBinding(binding.modelPropName,theControl);var modelEventName=binding.modelPropName+"Changed";glu.log.debug("binding model event name of "+modelEventName);var controlId=theControl.id,valueSetter=propBindings.setComponentProperty;if(void 0===valueSetter){var setterName="set"+glu.string(binding.controlPropName).toPascalCase(),testSetter=theControl[setterName];if(void 0===testSetter)return glu.log.debug('Attempted to bind non-existent value setter "'+setterName+'" on xtype: '+theControl.xtype),void 0;valueSetter=function(value,oldValue,options,control){control[setterName].call(control,value)}}var storeInControlAs=propBindings.storeValueInComponentAs||binding.controlPropName,wrapper=function(value,oldValue,options){var control=Ext.getCmp(controlId);return void 0===control&&(bindingAdapter.findControl&&(control=bindingAdapter.findControl(config)),void 0===control)?"discard":(glu.isArray(value)&&(value=value.slice()),binding.invertValue&&(value=!value),binding.isFormula&&(value=binding.prefix+value+binding.suffix),glu.equivalent(control[storeInControlAs],value)?(glu.log.debug("suppressing set of property "+binding.controlPropName+" on control as it already has value->"+value),void 0):(binding.invertValue&&(oldValue=!oldValue),binding.isFormula&&(oldValue=binding.prefix+oldValue+binding.suffix),glu.log.debug('setting control property "'+binding.controlPropName+'" to "'+value+'"'),glu.updatingUI(),valueSetter(value,oldValue,options,control),control[storeInControlAs]=value,void 0))};glu.log.debug("LISTENING on viewmodel property "+modelEventName),viewmodel.on(modelEventName,wrapper,viewmodel)}}),Ext.ns("glu.provider.binder"),Ext.apply(glu.provider.binder,{collectBindings:function(config,viewmodel,parentConfig,parentPropName,parentAdapter,bindingsList,indents){function bindChildren(){for(var idx=0;childContainerPropNames.length>idx;idx++){var childContainerPropName=childContainerPropNames[idx],childContainer=config[childContainerPropName];if(Ext.isArray(childContainer)){for(var newItems=[],i=0;childContainer.length>i;i++){var childItem=childContainer[i],result=this.collectBindings(childItem,viewmodel,config,childContainerPropName,xtypeAdapter,bindingsList,indents+1);newItems.push(result.config)}config[childContainerPropName]=newItems}else config[childContainerPropName]=this.collectBindings(childContainer,viewmodel,config,childContainerPropName,xtypeAdapter,bindingsList,indents+1).config}}if(parentConfig){if(glu.isString(config)){if("->"==config||"-"==config||"|"==config)return{config:config,bindings:bindingsList};config={name:config}}var parentAdapter=parentAdapter||this.getAdapter(parentConfig),defaultTypeForItems="items"==parentPropName?parentConfig.defaultType:null,adapterSpecificDefaultXtype=parentAdapter.defaultTypes?parentAdapter.defaultTypes[parentPropName]:null;config.xtype=config.xtype||defaultTypeForItems||adapterSpecificDefaultXtype||"panel",("items"==parentPropName||void 0===parentPropName)&&(parentConfig.defaults&&Ext.applyIf(config,parentConfig.defaults),parentConfig.defaultTransforms&&(config.transforms=config.transforms||parentConfig.defaultTransforms));var isRegistered=this.isRegistered(config.xtype);if(config.xtype&&!isRegistered){var origXtype=config.xtype;if(delete config.xtype,origXtype&&"@{"==origXtype.substring(0,2)){var expr=origXtype.substring(2,origXtype.length-1),split=this.traverseExpression(viewmodel,expr),target=split.model[split.prop],viewname=target.viewmodelName+(config.viewMode?"_"+config.viewMode:""),spec=glu.getViewSpec(target,viewmodel.ns,viewname,config);if(Ext.isString(spec))throw spec;config=spec,config.xtype=config.xtype||defaultTypeForItems||adapterSpecificDefaultXtype||"panel",config.bindContext=expr}else{var spec=glu.getViewSpec(viewmodel,viewmodel.ns,origXtype,config);Ext.isString(spec)?config.xtype=origXtype:(config=spec,config.xtype=config.xtype||defaultTypeForItems||adapterSpecificDefaultXtype||"panel")}}}glu.log.indentMore(),config._bindingMap=config._bindingMap||{},config.xtype=config.xtype||"panel",glu.log.debug(glu.log.indent+"COLLECTING bindings for {xtype: "+config.xtype+"}"),bindingsList=bindingsList||[];var xtypeAdapter=this.getAdapter(config),transformAdapters=[];if(null!=config.transforms)for(var i=0;config.transforms.length>i;i++)transformAdapters.push(this.getAdapter({xtype:config.transforms[i]}));for(var i=0;glu.plugins.length>i;i++)transformAdapters.push(this.getAdapter({xtype:glu.plugins[i]}));if(config.hasOwnProperty("bindContext")){var traversalExpression=this.traverseExpression(viewmodel,config.bindContext);traversalExpression.model[traversalExpression.prop]&&(viewmodel=traversalExpression.model[traversalExpression.prop])}for(var origXtype=null;origXtype!=config.xtype;){var origXtype=config.xtype;glu.isFunction(xtypeAdapter.beforeCollect)&&xtypeAdapter.beforeCollect(config,viewmodel);for(var i=0;transformAdapters.length>i;i++){var origXtype=config.xtype;glu.isFunction(transformAdapters[i].beforeCollect)&&transformAdapters[i].beforeCollect(config,viewmodel)}origXtype!==config.xtype&&(xtypeAdapter=this.getAdapter(config))}glu.fireEvent("beforecollect",config,viewmodel,parentPropName),null==config.name||xtypeAdapter.suppressNameBindings||glu.isFunction(xtypeAdapter.applyConventions)&&xtypeAdapter.applyConventions(config,viewmodel);var childContainerPropNames=[];for(var propName in config)if("xtype"!==propName&&"ptype"!==propName&&"_defaultVm"!==propName&&"id"!==propName&&"_bindings"!==propName&&"_bindingMap"!==propName&&("name"!==propName||xtypeAdapter.suppressNameBindings)&&"rootVM"!==propName){var value=config[propName];if("listeners"!=propName)if(xtypeAdapter.isChildObject&&xtypeAdapter.isChildObject(propName,value)){if(glu.isString(value)||glu.isArray(value)){var shortcutConverter=xtypeAdapter[propName+"Shortcut"];if(shortcutConverter&&(value=shortcutConverter(value,config),config[propName]=value),glu.isString(value)||glu.isArray(value))throw Error("Failed to convert "+propName+" into a child object")}childContainerPropNames.push(propName)}else{var isChildArray=xtypeAdapter.isChildArray&&xtypeAdapter.isChildArray(propName);if(isChildArray&&glu.isArray(value))childContainerPropNames.push(propName);else{var isEventListener="handler"==propName||glu.symbol(propName).endsWith("Handler");this.collectPropertyBinding(propName,config,viewmodel,isEventListener,isChildArray,xtypeAdapter)}}else{config._bindingMap=config._bindingMap||{},config._bindingMap.listeners=config._bindingMap.listeners||{};var listeners=value;for(var propName in listeners)config._bindingMap.listeners[propName]=config.listeners[propName],this.collectPropertyBinding(propName,config.listeners,viewmodel,!0)}}glu.isFunction(xtypeAdapter.beforeCollectChildren)&&xtypeAdapter.beforeCollectChildren(config,viewmodel),bindChildren.apply(this),glu.isFunction(xtypeAdapter.beforeCreate)&&xtypeAdapter.beforeCreate(config,viewmodel);for(var i=0;transformAdapters.length>i;i++)if(glu.isFunction(transformAdapters[i].beforeCreate)){var upshot=transformAdapters[i].beforeCreate(config,viewmodel)||{};upshot.rebindChildren&&bindChildren.apply(this)}return config.plugins&&config.plugins.addedBinderPlugin||("touch"==Ext.getProvider().provider?(config.plugins=config.plugins||[],config.plugins.addedBinderPlugin=!0,Ext.define("Ext.plugin."+xtypeAdapter.name+"Plugin",{isBinderPlugin:!0,alias:"plugin."+xtypeAdapter.name+"Plugin",init:function(control){glu.isFunction(xtypeAdapter.afterCreate)&&xtypeAdapter.afterCreate(control,viewmodel);for(var i=0;transformAdapters.length>i;i++){var tAdapter=transformAdapters[i];glu.isFunction(tAdapter.afterCreate)&&tAdapter.afterCreate(control,viewmodel)}}}),config.plugins.push(xtypeAdapter.name+"Plugin")):(config.plugins=config.plugins||[],config.plugins.addedBinderPlugin=!0,config.plugins.push({isBinderPlugin:!0,init:function(control){glu.isFunction(xtypeAdapter.afterCreate)&&xtypeAdapter.afterCreate(control,viewmodel);for(var i=0;transformAdapters.length>i;i++){var tAdapter=transformAdapters[i];glu.isFunction(tAdapter.afterCreate)&&tAdapter.afterCreate(control,viewmodel)}}}))),null!=config._bindings&&config._bindings.length>0&&(config.id=config.id||Ext.id(null,"glu-"+config.xtype+"-"),config._bindings.defaultModel=viewmodel,config._bindings.adapter=xtypeAdapter,bindingsList.push(config)),glu.log.indentLess(),{config:config,bindings:bindingsList}},collectPropertyBinding:function(propName,config,viewmodel,isEventListener,isChildArray,xtypeAdapter){var propValue=config[propName],binding=this.readPropertyBinding(propValue,viewmodel,isEventListener);if(null!=binding){if(binding.localizationKey)return config[propName]=binding.initialValue,void 0;if(binding.controlPropName=propName,!binding.valid){if(binding.reason.indexOf("Syntax ")>-1)throw Error("Binding Exception - "+binding.reason);if(binding.optional)return delete config[propName],void 0;if("Missing bind target"==binding.reason)throw Error('Binding Exception - The control config property "'+propName+'" is non-optionally bound to view model property "'+propValue+'" but that target does not exist.');if("Illegal function binding"==binding.reason)throw Error('Binding Exception: Attempted to bind config property "'+propName+'" to a function when "'+propName+'" is not a handler or listener.');throw Error("Binding Exception: "+binding.reason)}if(isEventListener)return binding.initialValue=function(){var args=Array.prototype.slice.call(arguments);args.shift(),config.value&&args.unshift(config.value),glu.log.info(glu.symbol("USER triggered {0}.{1}").format(""+binding.model,binding.modelPropName)),binding.model[binding.modelPropName].apply(binding.model,args)},config[binding.controlPropName]=binding.initialValue,void 0;if(binding.initialValue&&isChildArray&&(binding.initialValue=[]),xtypeAdapter){var propBindings=xtypeAdapter[binding.controlPropName+"Bindings"];propBindings&&propBindings.transformInitialValue&&(binding.initialValue=propBindings.transformInitialValue(binding.initialValue,config,binding.model))}config[binding.controlPropName]=binding.initialValue,config._bindings=config._bindings||[],config._bindingMap&&(config._bindingMap[propName]=propValue),binding.onetime||config._bindings.push(binding)}},readPropertyBinding:function(propValue,viewmodel,isEventListener){var binding=glu.parseBindingSyntax(propValue);if(null==binding||!binding.valid)return binding;if(binding=Ext.apply(binding,{model:viewmodel,invertValue:!1,initialValue:null}),binding.localizationKey)return binding.initialValue=glu.localize({viewmodel:binding.model,ns:viewmodel.ns,key:binding.localizationKey}),binding;var bindExpression=binding.bindExpression;if(0==bindExpression.indexOf("!")&&(binding.invertValue=!0,bindExpression=bindExpression.substring(1)),bindExpression.substring(0,glu.conventions.windowPath.length)==glu.conventions.windowPath){bindExpression=bindExpression.substring(glu.conventions.windowPath.length);var traversed=this.traverseExpression(window,bindExpression);binding.model=traversed.model,bindExpression=traversed.prop}else if(bindExpression.indexOf(glu.conventions.autoUp)>-1)bindExpression=bindExpression.substring(glu.conventions.autoUp.length),binding.model=this.traverseUpExpression(binding.model,bindExpression);else if(bindExpression.indexOf(".")>-1){var traversed=this.traverseExpression(binding.model,bindExpression);binding.model=traversed.model,bindExpression=traversed.prop}return binding.modelPropName=bindExpression,binding.initialValue=binding.model.get?binding.model.get(bindExpression):binding.model[bindExpression],void 0!==binding.initialValue||binding.model.hasOwnProperty(bindExpression)?isEventListener?binding:(Ext.isFunction(binding.initialValue)&&(binding.valid=!1,binding.reason="Illegal function binding"),binding.invertValue&&(binding.initialValue=!binding.initialValue),binding.isFormula&&(binding.initialValue=binding.prefix+binding.initialValue+binding.suffix),binding):(binding.valid=!1,binding.reason="Missing bind target",binding)},traverseExpression:function(model,expression){for(var tokens=expression.split("."),actualModel=model,i=0;tokens.length-1>i;i++){var token=tokens[i],child=actualModel.get?actualModel.get(token):actualModel[token];if(void 0===child)throw Error("Unable to find child '"+token+"' within expression '"+expression+"'");actualModel=child}return{model:actualModel,prop:tokens[tokens.length-1]}},traverseUpExpression:function(model,expression){var foundModel=model;do{var hasProp=foundModel.hasOwnProperty(expression);if(hasProp)break;foundModel=foundModel.parentVM}while(null!=foundModel);return foundModel||model}}),glu.provider.itemsHelper={insertItem:function(context,idx,viewItem){var container=context.control,collectionName=context.binding.controlPropName;"items"!=collectionName?container[collectionName].insert(idx,viewItem):container.insert?container.insert(idx,viewItem):container.items.insert(idx,viewItem)},removeItemAt:function(context,idx){var container=context.control,collectionName=context.binding.controlPropName;if("items"!=collectionName)container[collectionName].removeAt(idx);else{if(idx>container.items.length-1)return;container.remove?container.remove(idx):container.items.removeAt(idx)}},removeAllItems:function(context){var container=context.control,collectionName=context.binding.controlPropName;"items"!=collectionName?container[collectionName].removeAll():container.removeAll?container.removeAll():container.items.removeAll()},respondToAdd:function(item,idx,context,needsDoLayout){glu.log.indentMore(),glu.updatingUI(),glu.log.debug(glu.log.indent+"Processing a view item added to collection at index "+idx);var list=context.viewmodel.get(context.binding.modelPropName),container=context.control;if(!container.itemTemplate&&"viewmodel"!=item.mtype&&"datamodel"!=item.mtype)throw Error("Cannot render an item within a bound items list because there is neither an itemTemplate defined nor is the item a viewmodel");var viewItem=null;if(container.itemTemplate){var viewItemSpec=glu.isFunction(container.itemTemplate)?container.itemTemplate(item,idx):glu.deepApply({},container.itemTemplate);if(void 0===viewItemSpec)return;item.parentVM=list.parentVM,item.rootVM=list.rootVM,item.ns=list.ns,item.recType=list.recType;var result=glu.provider.binder.collectBindings(viewItemSpec,item,container.initialConfig),boundConfigs=result.bindings;null!=item.phantom&&boundConfigs.length>0&&this.makeRecordObservable(item),viewItem=glu.widget(viewItemSpec),glu.provider.binder.applyBindingsList(boundConfigs)}else{var viewModelName=item.viewmodelName;container.initialConfig.defaults&&container.initialConfig.defaults.viewMode&&(viewModelName+="_"+container.initialConfig.defaults.viewMode),viewItem=glu.view(item,item.ns,viewModelName,{},{},container.initialConfig)}viewItem._vm=item,this.insertItem(context,idx,viewItem),needsDoLayout&&container.doLayout(),"touch"==Ext.getProvider().provider&&container.setActiveItem(0),viewItem.model=item,glu.log.indentLess()},bindItems:function(context,needsDoLayout){glu.log.indentMore(),glu.log.debug(glu.log.indent+"processing bound items list"),context.needsDoLayout=needsDoLayout;var list=context.viewmodel.get(context.binding.modelPropName),container=context.control;context.valueSetTask=new Ext.util.DelayedTask(function(){});var me=this;if(glu.isNumber(list)){var count=list;list=[];for(var i=0;count+1>i;i++)list.push(i)}if(list.each=list.each||list.foreach||function(process){for(var i=0;list.length>i;i++)process.call(me,list[i],i)},list.each(function(item,idx){this.respondToAdd(item,idx,context,!1,!0)},this),needsDoLayout&&container.doLayout(),void 0!==list.on){if(list._ob){glu.temp=glu.temp||{},glu.temp.transfers=glu.temp.transfer||{};var attachPath="_vm."+context.binding.modelPropName+".",transferKey=context.viewmodel.viewmodelName+"-"+context.binding.modelPropName;container._ob.on(attachPath+"removedall",function(){this.removeAllItems(context)},this),container._ob.on(attachPath+"added",function(item,idx,isTransfer){if(glu.updatingUI(),isTransfer){var transferral=glu.temp.transfers[transferKey],component=transferral.shift();return 0==transferral.length&&delete glu.temp.transfers[transferKey],delete component._isTransferring,container.autoDestroy=container._autoDestroy,delete container._autoDestroy,component.destroyed?(this.respondToAdd(item,idx,context,needsDoLayout),void 0):(this.insertItem(context,idx,component),void 0)}this.respondToAdd(item,idx,context,needsDoLayout)},this),container._ob.on(attachPath+"removed",function(item,idx,isTransfer){if(glu.updatingUI(),isTransfer){var component=container.items.getAt(idx);component._isTransferring=!0,container._autoDestroy=container.autoDestroy,container.autoDestroy=!1,glu.temp.transfers[transferKey]=glu.temp.transfers[transferKey]||[],glu.temp.transfers[transferKey].push(component)}container._changeOriginatedFromModel=!0,this.removeItemAt(context,idx),delete container._changeOriginatedFromModel},this)}else list.data&&list.data.on&&(Ext.getVersion().major>3||"touch"==Ext.getProvider().provider?(list.data.on("add",function(idx,item){glu.updatingUI(),this.respondToAdd(item,idx,context,needsDoLayout)},this),list.data.on("remove",function(idx,item){glu.updatingUI(),this.removeItemAt(context,idx)},this)):(list.on("add",function(store,items,idx){for(var it=0;items.length>it;it++)glu.updatingUI(),this.respondToAdd(items[it],idx+it,context,needsDoLayout)},this),list.on("remove",function(store,item,idx){glu.updatingUI(),container._changeOriginatedFromModel=!0,this.removeItemAt(context,idx),delete container._changeOriginatedFromModel},this)));glu.log.indentLess()}},makeRecordObservable:function(item){item.events={},item.innerSet=item.set,item.registerControlBinding=function(){},item.on=function(name,callback,scope){name=name.toLowerCase(),this.events.hasOwnProperty(name)||(this.events[name]={listeners:[]});var evt=this.events[name];evt.listeners.push({fn:callback,scope:scope||glu})},item.fireEvent=function(){var name=arguments[0].toLowerCase(),args=Array.prototype.slice.call(arguments);args.shift(),this.events.hasOwnProperty(name)||(this.events[name]={listeners:[]});for(var evt=this.events[name],i=0;evt.listeners.length>i;i++){var listener=evt.listeners[i],myVeto=listener.fn.apply(listener.scope,args);if(myVeto===!0)return!1}return!0},item.set=function(propName,value){var oldValue=this.get(propName);oldValue!==value&&(this.innerSet(propName,value),this.fireEvent(propName+"Changed",value,oldValue,{modelPropName:propName}),this.fireEvent("changed",value,oldValue,{modelPropName:propName}))}}},Ext.namespace("glu.provider"),Ext.apply(glu.provider,{getCmp:function(id){return Ext.getCmp(id)},widget:Ext.getVersion().major>3||"touch"==Ext.getProvider().provider?function(config){return 0==config.xtype.indexOf("svg-")?Ext.createByAlias("svgwidgets."+config.xtype,config):Ext.widget(config.xtype,config)}:function(config){return Ext.create(config)},view:function(vm,viewSpec,parent){viewSpec._asWindow&&"menu"!=viewSpec.xtype&&(viewSpec.asWindow?viewSpec=glu.deepApply({xtype:"window",layout:"fit",items:[viewSpec]},viewSpec.asWindow):viewSpec.xtype="window"),viewSpec.xtype=viewSpec.xtype||"panel",parent&&parent.svgParentId&&(viewSpec.svgParentId=parent.svgParentId);var bindings=glu.provider.binder.collectBindings(viewSpec,vm,parent).bindings,view=this.widget(viewSpec);return glu.provider.binder.applyBindingsList(bindings),view},namespace:function(str){return Ext.namespace(str)},apply:function(obj,config,defaults){return Ext.apply(obj,config,defaults)},viewport:function(config){var view=glu.createViewmodelAndView(config);if("touch"!=Ext.getProvider().provider)return new Ext.Viewport({layout:"fit",items:[view]});var viewport=Ext.Viewport.add(view)},confirm:function(title,message,fn,scope){return Ext.isObject(title)?Ext.Msg.show(title):Ext.Msg.confirm(title,message,fn,scope)},message:function(title,message,fn,scope){return Ext.Msg.alert(title,message,fn,scope)},prompt:function(title,message,fn,scope){return Ext.Msg.prompt(title,message,fn,scope)},panel:function(xtypeName,vmConfig){glu.isObject(xtypeName)&&(vmConfig=xtypeName,xtypeName=vmConfig.xtype);var ctor=function(extjsConfig){extjsConfig.viewmodelConfig&&glu.deepApply(vmConfig,extjsConfig.viewmodelConfig);var vm=glu.model(vmConfig);vm.init(),delete extjsConfig.xtype;var viewSpec=glu.getViewSpec(vm,vm.ns,vm.viewmodel,extjsConfig,{xtype:"panel"}),bindings=glu.provider.binder.collectBindings(viewSpec,vm).bindings;if(Ext.isString(viewSpec))throw viewSpec;type.superclass.constructor.call(this,viewSpec),this.vm=vm,this.on("activate",vm.activate,vm),glu.provider.binder.applyBindingsList(bindings)};if(Ext.getVersion().major>3||"touch"==Ext.getProvider().provider){var cfg={extend:"Ext.panel.Panel",constructor:ctor};null!=xtypeName&&(cfg.alias="widget."+xtypeName);var type=Ext.define("glu.panels."+Ext.id().replace("-","_"),cfg);return type}var type=Ext.extend(Ext.Panel,{constructor:ctor});return null!=xtypeName&&Ext.reg(xtypeName,type),type},openWindow:function(viewmodel,viewMode){var viewmodelName=viewMode?viewmodel.viewmodelName+"_"+viewMode:viewmodel.viewmodelName,view=glu.view(viewmodel,viewmodel.ns,viewmodelName,{_asWindow:!0});if(view.showAt&&view.usePositionAt){var pos=glu.walk(view.usePositionAt);view.showAt(pos.x,pos.y)}else view.show();return view},regAdapter:function(name,adapterDef){var ns=Ext.ns("glu.provider.adapters");return adapter=adapterDef,ns[name]=adapter,adapter.name=name,adapter},deferredLayoutTask:new Ext.util.DelayedTask(function(){glu._suspendingLayout=!1,Ext.resumeLayouts(!0)}),updatingUI:function(){glu.asyncLayouts&&Ext.suspendLayouts&&(glu._suspendingLayout||(Ext.suspendLayouts(),glu._suspendingLayout=!0),this.deferredLayoutTask.delay(1))}}),Ext.ns("glu.provider.adapters"),glu.regAdapter=glu.provider.regAdapter,glu.regAdapter("fieldset",{extend:"container",defaultTypes:{items:"textfield"},applyConventions:function(config,viewmodel){Ext.applyIf(config,{collapsed:glu.conventions.expression(config.name+"IsExpanded",{optional:!0,not:!0})}),glu.provider.adapters.Container.prototype.applyConventions.apply(this,arguments)},afterCreate:function(control,viewmodel){glu.provider.adapters.Container.prototype.afterCreate.apply(this,arguments);var expandOrCollapseFactory=function(expanded){return function(control){return control.supressCollapseEvents?!0:(control.fireEvent("expandorcollapserequest",control,expanded),!1)}};control._bindingMap.collapsed&&(control.on("beforecollapse",expandOrCollapseFactory(!1)),control.on("beforeexpand",expandOrCollapseFactory(!0))),control._bindingMap&&void 0!==control._bindingMap.activeItem&&(control.addActual=control.add,control.add=function(index,item){item.on("render",function(){item.getEl().on("click",function(){control.fireEvent("activeitemchangerequest",control,control.items.indexOf(item))})}),control.addActual(index,item)})},collapsedBindings:{eventName:"expandorcollapserequest",eventConverter:function(control,expanded){return!expanded},storeValueInComponentAs:"collapsedActual",setComponentProperty:function(value,oldValue,options,control){control.supressCollapseEvents=!0,1==value?control.rendered?control.collapse():control.collapsed=!0:control.rendered?control.expand():control.collapsed=!1,control.supressCollapseEvents=!1}}}),glu.regAdapter("multiselect",{extend:"field"}),glu.regAdapter("autofield",{beforeCollect:function(){function getField(name){return this.fieldsMap[name]}return function(config,dataModel){var key=config.name,field;if("datamodel"===dataModel.mtype){var model=dataModel.getFieldModel();if(void 0===model.fieldsMap){for(var lookup={},i=0;model.fields.length>i;i++){var field=model.fields[i];lookup[field.name]=field}model.fieldsMap=lookup}if(model.getField=model.getField||getField,field=model.getField(key),!field)return config.xtype="displayfield",void 0}else field=dataModel.getPropertyInfo(key);var xtype="textfield";if(dataModel[key+"$"])xtype="displayfield";else if("id"==field.name)xtype="displayfield";else if(field.oneOf){xtype="combo";for(var dataType=glu.getDataTypeOf(field.oneOf[0]),data=[],i=0;field.oneOf.length>i;i++){var fieldKey=field.oneOf[i];data.push({text:glu.localize(fieldKey,{viewmodel:dataModel}),value:fieldKey})}var backingStore=new Ext.data.Store({fields:["text",{name:"value",type:dataType}],data:data});glu.applyIf(config,{triggerAction:"all",mode:"local",store:backingStore,displayField:"text",valueField:"value",forceSelection:!0})}else if(field.hasOwnProperty("lookup")){xtype="combo";var displayField="text",valueField="value",ns=eval(dataModel.ns);ns.lookups&&ns.lookups[field.lookup]&&(Ext.getVersion().major>3&&void 0===ns.lookups[field.lookup].fields&&(ns.lookups[field.lookup].fields=(new ns.lookups[field.lookup].model).fields),valueField=ns.lookups[field.lookup].fields.keys[0],displayField=ns.lookups[field.lookup].fields.keys[1]),config.triggerAction="all",config.mode="local",config.store=glu.conventions.build().start().root().literal(dataModel.ns).lookupNs().prop(field.lookup).end(),config.displayField=displayField,config.valueField=valueField}else"integer"==field.type||"int"==field.type||"number"==field.type?xtype="numberfield":"boolean"==field.type?xtype="checkbox":"date"==field.type&&(xtype="datefield");config.xtype=xtype}}()}),glu.regAdapter("button",{extend:"component",defaultTypes:{menu:"menu"},isChildObject:function(propName){return"menu"===propName},menuShortcut:function(value){return{xtype:"menu",defaultType:"menuitem",items:value}},applyConventions:function(config,viewmodel){Ext.applyIf(config,{handler:glu.conventions.expression(config.name,{up:!0}),pressed:glu.conventions.expression(config.name+"IsPressed",{optional:!0}),text:glu.conventions.asLocaleKey(config.name)}),glu.provider.adapters.Component.prototype.applyConventions.apply(this,arguments)},pressedBindings:{setComponentProperty:function(newValue,oldValue,options,control){control.toggle(newValue,!0)},eventName:"toggle",eventConverter:function(control){return control.pressed}}}),glu.regAdapter("buttongroup",{extend:"container",defaultTypes:{items:"button"},beforeCollect:function(config){glu.provider.adapters.Container.prototype.beforeCollect.apply(this,arguments),null!=config.activeItem&&(config.defaults=config.defaults||{},config.defaults.enableToggle=!0,config.defaults.toggleGroup=Ext.id(),config.defaults.toggleHandler=function(button){button.ownerCt.fireEvent("activeitemchanged",button.ownerCt,button,button.ownerCt.items.indexOf(button))})},itemsBindings:{custom:function(context){context.control.itemTemplate=context.control.itemTemplate||function(item){var key=item.itemId||item.name||item.value||item.id;return{xtype:"button",text:glu.conventions.localizeStart+key+glu.conventions.localizeEnd,value:key}},glu.provider.itemsHelper.bindItems(context,!0)}},activeItemBindings:{eventName:"activeitemchanged",eventConverter:function(group,button,idx){return button.value||idx},setComponentProperty:function(value,oldvalue,options,control){var button=control.items.find(function(item){return value==item.value});button.toggle(!0)}},afterCreate:function(control,viewmodel){glu.provider.adapters.Container.prototype.afterCreate.apply(this,arguments);var me=this;control._bindingMap.activeItem&&control.on("afterrender",function(){setTimeout(function(){me.activeItemBindings.setComponentProperty(control.activeItem,null,null,control)},1)})}}),glu.regAdapter("checkbox",{extend:"field",beforeCreate:function(config,viewmodel){config.checked=config.checked||config.value},initAdapter:function(){this.checkedBindings=this.valueBindings},boxLabelBindings:{setComponentProperty:function(newValue,oldValue,options,control){control.rendered?control.boxLabelEl.update(newValue):control.boxLabel=newValue}}}),glu.regAdapter("checkboxfield",{extend:"checkbox"}),glu.regAdapter("radiofield",{extend:"checkbox",suppressNameBindings:!0}),glu.regAdapter("radio",{extend:"radiofield"}),glu.regAdapter("combo",{extend:"field",applyConventions:function(config,viewmodel){Ext.applyIf(config,{store:glu.conventions.expression(config.name+"Store",{optional:!0})}),glu.provider.adapters.Field.prototype.applyConventions.apply(this,arguments)
},beforeCreate:function(config,viewmodel){if(config.store&&1!=config.store.gluTweaked){config.store.gluTweaked=!0;var evtName=Ext.getVersion().major>3?"datachanged":"load";config.store.on(evtName,function(){var control=Ext.getCmp(config.id);control&&control.setValue(control.targetValue)})}},afterCreate:function(control,viewmodel){glu.provider.adapters.Field.prototype.afterCreate.apply(this,arguments),control.delayedEvent||(control.delayedEvent=new Ext.util.DelayedTask(function(){control.fireEvent("valuechanged",control)})),control.enableKeyEvents&&control.addListener("keyup",function(t,e,o){control.delayedEvent.delay(control.keyDelay||100)},control),control.multiSelect&&control.addListener("beforedeselect",function(t,e,o){control.delayedEvent.delay(control.keyDelay||100)},control),control.addListener("change",function(t,e,o){control.delayedEvent.delay(control.keyDelay||100)},control),control.addListener("select",function(t,e,o){control.delayedEvent.delay(control.keyDelay||100)},control),control.valueField&&(control.setValueActual=control.setValue,control.setValue=function(value){this.targetValue=value,this.setValueActual(value)},control.setValue(control.value))},beforeCollect:function(config){glu.provider.adapters.Field.prototype.beforeCollect.apply(this,arguments),config.editable&&(config.enableKeyEvents=!0)},initAdapter:function(){this.valueBindings=glu.deepApplyIf({eventName:"valuechanged"},this.valueBindings)}}),glu.regAdapter("combobox",{extend:"combo"}),glu.regAdapter("component",{applyConventions:function(config,viewmodel){var g=glu.conventions,pattern={disabled:g.expression(config.name+"IsEnabled",{optional:!0,not:!0}),hidden:g.expression(config.name+"IsVisible",{optional:!0,not:!0})};glu.deepApplyIf(config,pattern)},isChildArray:function(name){return"editors"===name},isChildObject:function(){return!1},processChildPropertyShortcut:function(propName,config){return config},clsBindings:{setComponentProperty:function(newValue,oldValue,options,control){control.removeCls?control.removeCls(oldValue):control.removeClass(oldValue),control.addClass(newValue)}},itemClsBindings:{setComponentProperty:function(newValue,oldValue,options,control){if(control.el&&control.el.parent){var p=control.el.parent(".x-form-item");if(void 0===p)return;p.removeCls?p.removeCls(oldValue):p.removeClass(oldValue)}control.itemCls=newValue}},hiddenBindings:{setComponentProperty:function(newValue,oldValue,options,control){if("radiogroup"==control.xtype&&control.items&&control.items.length>0)for(var i=0;control.items.length>i;i++)Ext.isArray(control.items)||control.items.items[i].setVisible(!newValue);control.tab?control.tab.setVisible(!newValue):control.setVisible(!newValue),control.ownerCt&&control.ownerCt.doLayout()}},isHoveredBindings:{eventName:"hoverchange",eventConverter:function(ctrl){return ctrl.isHovered}},checkForEditors:function(config,propConfigs){for(var name in propConfigs){var editor=config[name];Ext.isObject(editor)&&(config[name]=editor.value,config.editors=config.editors||[],config.propName=name,editor.xtype="editor",editor.target=propConfigs[name],editor.trigger=editor.trigger||"dblclick",editor.field.value=editor.field.value||editor.value,delete editor.value,config.editors.push(editor))}},beforeCollect:function(config){},afterCreate:function(control,viewmodel){var config=control;if(config.editors)for(var i=0;config.editors.length>i;i++){var editorCfg=config.editors[i],editor=Ext.widget("editor",editorCfg);control.on("afterrender",function(control){setTimeout(function(){var el=Ext.isString(editor.target)?control[editor.target]:editor.target(control);el&&el.on(editor.trigger,function(){editor.startEdit(el,control[control.propName])})},1)})}if(null!=control.isHovered&&control.on("afterrender",function(){var el=control.el;control.isHovered=!1,el.on("mouseenter",function(){control.isHovered=!0,control.fireEvent("hoverchange",control,!0)}),el.on("mouseleave",function(){control.isHovered=!1,control.fireEvent("hoverchange",control,!1)})}),control.tpl){var task=new Ext.util.DelayedTask(function(){control.update(viewmodel),control.fireEvent("updated",control)});control.on("render",function(){control.fireEvent("updated",control)}),control.data=viewmodel,viewmodel.on("bulkupdatecommitted",function(){task.delay(10)})}}}),glu.regAdapter("compositefield",{extend:"field",valueBindings:{eventName:"change",eventConverter:function(control){return control.getValue()}},afterCreate:function(control,viewmodel){if(glu.provider.adapters.Field.prototype.afterCreate.apply(this,arguments),void 0===control.items.get)for(var i=0;control.items.length>i;i++)control.items[i]=Ext.create(control.items[i])},itemsBindings:{custom:function(context){glu.provider.itemsHelper.bindItems(context,!0)}},isChildArray:function(propName,value){return"items"===propName}}),glu.regAdapter("container",{extend:"component",applyConventions:function(config,viewmodel){Ext.applyIf(config,{items:glu.conventions.expression(config.name)}),glu.provider.adapters.Component.prototype.applyConventions.apply(this,arguments)},beforeCollect:function(){glu.provider.adapters.Component.prototype.beforeCollect.apply(this,arguments)},isChildArray:function(propName,value){return"editors"===propName||"items"===propName},itemsBindings:{custom:function(context){glu.provider.itemsHelper.bindItems(context)}}}),glu.regAdapter("dataview",{extend:"component",selectedBindings:{eventName:"selectionchange",eventConverter:function(control){return control.getSelectedRecords()},setComponentProperty:function(value,oldValue,options,control){}}}),glu.regAdapter("displayfield",{extend:"field",valueBindings:{setComponentProperty:function(value,oldValue,options,control){control.setValue(value),control.value=control.getValue()}}}),glu.regAdapter("editor",{extend:"field",isChildObject:function(propName){return"field"===propName},inEditModeBindings:{}}),glu.regAdapter("field",{extend:"component",applyConventions:function(config,viewmodel){Ext.applyIf(config,{value:glu.conventions.expression(config.name),valid:glu.conventions.expression(config.name+"IsValid",{optional:!0}),fieldLabel:glu.conventions.asLocaleKey(config.name)}),glu.provider.adapters.Component.prototype.applyConventions.apply(this,arguments)},beforeCollect:function(config,viewmodel){this.checkForEditors(config,{fieldLabel:"labelEl",value:"inputEl",boxLabel:"boxLabelEl"})},validBindings:{setComponentProperty:function(newValue,oldValue,options,control){var text=control.invalidText;Ext.isString(newValue)&&(text=newValue,newValue=""===newValue?!0:!1),0==newValue?(control.valid=!1,control.markInvalid(text)):(control.valid=!0,control.clearInvalid())},onInit:function(binding,control){control.validate=Ext.emptyFn;var me=this;control.on("render",function(){setTimeout(function(){glu.provider.adapters.field.validBindings.setComponentProperty(control.valid,!1,{},control)},1)})}},valueBindings:{eventName:"change",eventConverter:function(field,newVal){return field.getValue()},setComponentProperty:function(value,oldvalue,options,control){control.suspendCheckChange++,control.setValue(value),control.lastValue=value,control.suspendCheckChange--}}}),glu.regAdapter("fieldcontainer",{extend:"panel",applyConventions:function(config,viewmodel){Ext.applyIf(config,{value:glu.conventions.expression(config.name),valid:glu.conventions.expression(config.name+"IsValid",{optional:!0})}),glu.provider.adapters.Panel.apply(this,arguments)},itemsBindings:{custom:function(context){glu.provider.itemsHelper.bindItems(context,!0)}},beforeCollect:function(config){glu.provider.adapters.Panel.prototype.beforeCollect.apply(this,arguments),this.checkForEditors(config,{fieldLabel:"labelEl"})}}),glu.regAdapter("fileuploadfield",{extend:"field",valueBindings:{eventName:"fileselected",eventConverter:function(control){return control.getValue()}}}),glu.regAdapter("htmleditor",{extend:"textfield",afterCreate:function(control,viewmodel){glu.provider.adapters.Textfield.prototype.afterCreate.apply(this,arguments),control.addListener("sync",function(t,v,o){control.lastSyncValue!=v&&(control.lastSyncValue=v,control.delayedEvent.delay(control.keyDelay||100))},control)}}),glu.regAdapter("label",{extend:"component",applyConventions:function(config,viewmodel){Ext.applyIf(config,{text:"~~"+config.name+"~~"}),glu.provider.adapters.Component.prototype.applyConventions.apply(this,arguments)}}),glu.regAdapter("menu",{extend:"panel",defaultTypes:{items:"menuitem"},itemsBindings:{custom:function(context){glu.provider.itemsHelper.bindItems(context)}}}),glu.regAdapter("menuitem",{extend:"component",applyConventions:function(config,viewmodel){Ext.applyIf(config,{handler:glu.conventions.expression(config.name,{up:!0}),text:glu.conventions.asLocaleKey(config.name)}),glu.provider.adapters.Component.prototype.applyConventions.apply(this,arguments)},checkedBindings:{eventName:"checkchange",eventConverter:function(item,checked){return checked},setComponentProperty:function(value,oldValue,options,control){control.setChecked(value,!0)}},isChildObject:function(propName){return"menu"===propName},menuShortcut:function(value){return{xtype:"menu",defaultType:"menuitem",items:value}}}),glu.regAdapter("panel",{extend:"container",applyConventions:function(config,viewmodel){Ext.applyIf(config,{collapsed:glu.conventions.expression(config.name+"IsExpanded",{optional:!0,not:!0})}),glu.provider.adapters.Container.prototype.applyConventions.apply(this,arguments)},isChildArray:function(propName,value){return"editors"==propName||"items"===propName||"dockedItems"===propName},isChildObject:function(propName){return"tbar"===propName||"bbar"===propName||"buttons"===propName||"fbar"===propName||"lbar"===propName||"rbar"===propName},tbarShortcut:function(value){return{xtype:"toolbar",defaultType:"button",items:value,dock:"top"}},bbarShortcut:function(value){return{xtype:"toolbar",defaultType:"button",items:value,dock:"bottom"}},buttonsShortcut:function(value,config){return{xtype:"toolbar",defaultType:"button",items:value,dock:"bottom",layout:{pack:{left:"start",center:"center"}[config.buttonAlign]||"end"}}},fbarShortcut:function(value,config){return{xtype:"toolbar",defaultType:"button",items:value,dock:"bottom",layout:{pack:{left:"start",center:"center"}[config.buttonAlign]||"end"}}},lbarShortcut:function(value){return{xtype:"toolbar",defaultType:"button",items:value,vertical:!0,dock:"left"}},rbarShortcut:function(value){return{xtype:"toolbar",defaultType:"button",items:value,vertical:!0,dock:"right"}},beforeCollect:function(config){glu.provider.adapters.Container.prototype.beforeCollect.apply(this,arguments),this.checkForEditors(config,{title:function(control){return control.header.titleCmp.textEl}}),config.closeHandler=config.closeHandler||"@{close}"},beforeCreate:function(config,vm){config.listeners=config.listeners||{},config.listeners.beforeclose=config.listeners.beforeclose||function(panel){return config.closeHandler&&config.closeHandler.apply(vm),!1}},afterCreate:function(control,viewmodel){glu.provider.adapters.Container.prototype.afterCreate.apply(this,arguments),control.isWindow&&Ext.isFunction(control.close)&&viewmodel.on("closed",function(){glu.log.debug("closed matching window since viewmodel was closed"),control.hidden?control.doClose():control.hide(null,control.doClose,control)});var expandOrCollapseFactory=function(expanded){return function(control){return control.supressCollapseEvents?!0:(control.fireEvent("expandorcollapserequest",control,expanded),!1)}};control._bindingMap.collapsed&&(control.on("beforecollapse",expandOrCollapseFactory(!1)),control.on("beforeexpand",expandOrCollapseFactory(!0))),control._bindingMap&&void 0!==control._bindingMap.activeItem&&"card"!=control.getLayout().type&&(control.addActual=control.add,control.add=function(index,item){item.on("render",function(){item.getEl().on("click",function(){control.fireEvent("activeitemchangerequest",control,control.items.indexOf(item),item)})}),control.addActual(index,item)}),void 0!==control._activeIndex&&control.on("render",function(panel){panel._changeOriginatedFromModel=!0,panel.getLayout().setActiveItem(panel._activeIndex)})},htmlBindings:{setComponentProperty:function(value,oldValue,options,control){control.update(value)}},dataBindings:{setComponentProperty:function(value,oldValue,options,control){control.update(value)}},collapsedBindings:{eventName:"expandorcollapserequest",eventConverter:function(control,expanded){return!expanded},storeValueInComponentAs:"collapsedActual",setComponentProperty:function(value,oldValue,options,control){control.supressCollapseEvents=!0,1==value?control.rendered?control.collapse(control.collapseDirection,control.animCollapse):control.collapsed=!0:control.rendered?control.expand(control.animCollapse):control.collapsed=!1,control.supressCollapseEvents=!1}},closableBindings:{setComponentProperty:function(value,oldValue,options,control){if(Ext.getVersion().major>3){if(control.tab)return control.tab.setClosable(value),void 0;if(control.header){for(var i=0;control.header.items.getCount()>i;i++){var tool=control.header.items.getAt(i);if("close"===tool.type)return tool.setVisible(value),void 0}value===!0&&(control.addClsWithUI("closable"),control.addTool({type:"close",handler:Ext.Function.bind(control.close,control,[])}))}}}},activeItemBindings:{eventName:"activeitemchangerequest",eventConverter:function(control,idx,item){return"viewmodel"===control._activeItemValueType?item._vm:idx},storeValueInComponentAs:"_activeIndex",setComponentProperty:function(value,oldValue,options,control){if(void 0!==value&&-1!==value){if(value.mtype&&(control._activeItemValueType="viewmodel",value=control.items.findIndexBy(function(card){return card._vm==value}),-1==value))throw Error("Could not find a item in card layout bound to the view model passed to activeItem");var oldItem=-1==oldValue?null:control.items.getAt(oldValue);control._changeOriginatedFromModel=!0,"card"==control.getLayout().type?control.getLayout().setActiveItem(value):control.fireEvent("activeitemchanged",control,control.items.getAt(value),oldItem)}},transformInitialValue:function(value,config,viewmodel){if(value.mtype){if(void 0===value.parentList)throw Error("Attempted to set an activeTab to a view model that is not in a list.  You should always set the activeItem in the init()");return config._activeItemValueType="viewmodel",config._activeIndex=value.parentList.indexOf(value),-1}return value}},enableTrackingBindings:{setComponentProperty:function(value,oldValue,options,control){var idx=value?0:1,active=control.items.get(idx);control.rendered?control.getLayout().setActiveItem(active):control.activeItem=active}},itemsBindings:{custom:function(context){if("card"!=context.control.layout)return glu.provider.itemsHelper.bindItems(context,!0),void 0;var activator=context.viewmodel.get(context.binding.modelPropName),cardPanel=context.control;glu.provider.itemsHelper.bindItems(context)}}}),glu.regAdapter("pickerfield",{extend:"field",collapsedBindings:{setComponentProperty:function(value,oldValue,options,control){1==value?control.rendered?control.collapse():control.collapsed=!0:control.rendered?control.expand():control.collapsed=!1}},initAdapter:function(){this.valueBindings=glu.deepApplyIf({eventName:"select"},this.valueBindings)}}),glu.regAdapter("progress",{extend:"field",valueBindings:{setComponentProperty:function(value,oldValue,options,control){control.updateProgress(value)}}}),glu.regAdapter("radiogroup",{extend:"field",valueBindings:{eventName:"change",eventConverter:function(field,newVal){var selected="";for(var key in newVal)selected=newVal[key];return selected},setComponentProperty:function(value,oldvalue,options,control){control.suspendCheckChange++,control.setValue(value),control.lastValue=value,control.suspendCheckChange--}},itemsBindings:{custom:function(context){glu.provider.itemsHelper.bindItems(context)}},isChildArray:function(propName,value){return"editors"===propName||"items"===propName}}),glu.regAdapter("checkboxgroup",{extend:"field",valueBindings:{eventName:"change",eventConverter:function(control,checked){var checks=[];for(var key in checked)"on"==checked[key]&&checks.push(key);return checks},setComponentProperty:function(newValue,oldValue,options,control){for(var obj={},i=0;newValue.length>i;i++)newValue[i]&&(obj[newValue[i]]=!0);control.setValue(obj)}},itemsBindings:{custom:function(context){glu.provider.itemsHelper.bindItems(context)}},isChildArray:function(propName,value){return"editors"===propName||"items"===propName}}),glu.regAdapter("spinnerfield",{extend:"field",beforeCreate:function(config){config.enableKeyEvents=!0},afterCreate:function(control,viewmodel){return glu.provider.adapters.Field.prototype.afterCreate.apply(this,arguments),glu.testMode?(control.addListener("keyup",function(){control.fireEvent("valuechanged",control)},control),void 0):(control.delayedEvent||(control.delayedEvent=new Ext.util.DelayedTask(function(){control.fireEvent("valuechanged",control)})),control.addListener("keyup",function(){control.delayedEvent.delay(control.keyDelay||100)},control),control.addListener("spin",function(){control.delayedEvent.delay(control.keyDelay||100)}),void 0)},initAdapter:function(){this.valueBindings=glu.deepApplyIf({eventName:"valuechanged"},this.valueBindings)}}),glu.regAdapter("tabpanel",{extend:"panel",applyConventions:function(config,viewmodel){var itemName=glu.string(config.name).until("List");Ext.applyIf(config,{activeTab:glu.conventions.expression(itemName+"WithFocus",{optional:!0})}),glu.provider.adapters.Container.prototype.applyConventions.apply(this,arguments)},activeTabBindings:{storeValueInComponentAs:"_activeIndex",setComponentProperty:function(value,oldValue,options,control){if(void 0!==value&&-1!==value){if(value.mtype&&(control._activeItemValueType="viewmodel",value=control.items.findIndexBy(function(card){return card._vm==value}),-1==value))throw Error("Could not find a item in card layout bound to the view model passed to activeItem");control._changeOriginatedFromModel=!0,control.setActiveTab(value)}},transformInitialValue:function(value,config,viewmodel){if(value.mtype){if(void 0===value.parentList)throw Error("Attempted to set an activeTab to a view model that is not in a list.  You should always set an activeTab in the init().");return config._activeItemValueType="viewmodel",config._activeIndex=value.parentList.indexOf(value),-1}return value},eventName:"tabchangerequest",eventConverter:function(control,panel,idx){return"viewmodel"===control._activeItemValueType?panel._vm:idx}},afterCreate:function(control,viewmodel){glu.provider.adapters.Panel.prototype.afterCreate.apply(this,arguments),control._bindingMap&&void 0!==control._bindingMap.activeTab&&(control.valueSetTask=new Ext.util.DelayedTask(function(){}),control.on("beforetabchange",function(tab,newpanel){if(control._changeOriginatedFromModel)return delete control._changeOriginatedFromModel,!0;var newIndex=tab.items.indexOf(newpanel);return control.valueSetTask.delay(1,function(){control.fireEvent("tabchangerequest",control,newpanel,newIndex)}),!1},this),void 0!==control._activeIndex&&control.on("render",function(tabpanel){tabpanel._changeOriginatedFromModel=!0,tabpanel.setActiveTab(tabpanel._activeIndex)}))}}),glu.regAdapter("textfield",{extend:"field",beforeCollect:function(config){glu.provider.adapters.Field.prototype.beforeCollect.apply(this,arguments),config.enableKeyEvents=!0},afterCreate:function(control,viewmodel){return glu.provider.adapters.Field.prototype.afterCreate.apply(this,arguments),glu.testMode?(control.addListener("keyup",function(){control.fireEvent("textchanged",control)},control),void 0):(control.delayedEvent||(control.delayedEvent=new Ext.util.DelayedTask(function(){control.fireEvent("textchanged",control)})),control.addListener("keyup",function(t,e,o){control.delayedEvent.delay(control.keyDelay||100)},control),control.enterKeyHandler&&control.on("specialkey",function(f,e){e.getKey()==e.ENTER&&(control.fireEvent("textchanged",control),control.enterKeyHandler(control))},null,{delay:110}),void 0)},initAdapter:function(){this.valueBindings=glu.deepApplyIf({eventName:"textchanged"},this.valueBindings)}}),glu.regAdapter("toolbar",{extend:"container",defaultTypes:{items:"button"},itemsBindings:{custom:function(context){glu.provider.itemsHelper.bindItems(context,!0)}}}),glu.regAdapter("grid",{extend:"panel",applyConventions:function(config,viewmodel){var g=glu.conventions,listname=config.name,name=glu.string(listname).until("List"),upperName=glu.string(name).toPascalCase(),selectionModelProp=viewmodel[name+"Selections"]?name+"Selections":name+"Selection",pattern={store:g.expression(listname),focus:g.expression(name+"WithFocus",{optional:!0}),selected:g.expression(selectionModelProp,{optional:!0}),listeners:{itemdblclick:g.expression("open"+upperName,{optional:!0,up:!0})}};glu.deepApplyIf(config,pattern),glu.provider.adapters.Panel.prototype.applyConventions.apply(this,arguments),delete config.items},beforeCreate:function(config,viewmodel){if(config.hasOwnProperty("selected")&&(config._singleSelect=!glu.isArray(config.selected),Ext.getVersion().major>3&&(config.selModel&&void 0!==config.selModel.mode||(config.selModel=config.selModel||{},config._singleSelect||(config.selModel.mode="multi")))),!config.cm&&!config.colModel&&config.columns&&config.store.recType){for(var model=eval(config.store.ns+".models."+config.store.recType),fields=model.fields,columns=[],i=0;config.columns.length>i;i++){var key=config.columns[i];if(Ext.isString(key)){var column={dataIndex:key,header:glu.localize({ns:viewmodel.ns,viewmodel:config.store,key:key})};config.filterable&&(column.filter={});var fn=eval(config.store.ns+".views."+glu.string(config.store.recType).toPascalCase()+glu.string(key).toPascalCase()+"ColumnRenderer");null!=fn&&(column.header="",column.renderer=Ext.createDelegate(fn,viewmodel,[config.store.recType,key],!0)),fields[i].width&&(column.width=fields[i].width),columns.push(column)}else columns.push(key)}config.columns=columns}var sm=config.sm||config.selModel;sm&&"checkboxsm"==sm.xtype&&(delete config.sm,delete config.selModel,delete sm.xtype,config.sm=new Ext.grid.CheckboxSelectionModel(sm),!Ext.getVersion().major>3&&(config.sm.isColumn=!0,config.columns.unshift(config.sm))),Ext.getVersion().major>3?config.columns={items:config.columns,defaults:{sortable:!0,width:120}}:(config.cm=new Ext.grid.ColumnModel({columns:config.columns,defaults:{sortable:!0,width:120}}),delete config.columns),glu.provider.adapters.Panel.prototype.beforeCreate.apply(this,arguments)},afterCreate:function(control,viewmodel){var sm=control.getSelectionModel();if(sm){if(sm.delayedEvent||(sm.delayedEvent=new Ext.util.DelayedTask(function(){Ext.getVersion().major>3?control.fireEvent("selectionsChanged",control,sm.getSelection()):control.fireEvent("selectionsChanged",control,sm.getSelections())})),sm.addListener("selectionchange",function(){sm.delayedEvent.delay(1)},control),control.getView().onHeaderClick=function(g,index){if(!this.headersDisabled&&this.cm.isSortable(index)){g.stopEditing(!0);var currentSort=g.store.getSortState()||{direction:"DESC"},order="ASC"==currentSort.direction?"DESC":"ASC";this.grid.fireEvent.call(this.grid,"sortrequest",control,{field:this.cm.getDataIndex(index),direction:order})}},control.getView().handleHdMenuClickActual=control.getView().handleHdMenuClick,control.getView().handleHdMenuClick=function(item){var dataIndex=this.cm.getDataIndex(this.hdCtxIndex);switch(item.getItemId()){case"asc":this.grid.fireEvent.call(this.grid,"sortrequest",control,{field:dataIndex,direction:"ASC"});break;case"desc":this.grid.fireEvent.call(this.grid,"sortrequest",control,{field:dataIndex,direction:"DESC"});break;default:this.handleHdMenuClickActual(item)}return!0},control.hasOwnProperty("focus")&&Ext.getVersion().major>3){var sm=control.getSelectionModel();sm.setLastFocusedActual=sm.setLastFocused,sm.setLastFocused=function(record,supressFocus){supressFocus&&this.setLastFocusedActual(record,!0),control.fireEvent("focuschangerequest",control,record)}}glu.provider.adapters.Panel.prototype.afterCreate.apply(this,arguments)}},sortFieldBindings:{eventName:"sortrequest"},sortDirectionBindings:{eventName:"sortrequest"},sortBindings:{eventName:"sortrequest",eventConverter:function(cntrl,info){return info},setComponentProperty:function(value,oldValue,options,control){}},storeBindings:{suppressViewmodelUpdate:!0},selectionsBindings:{eventName:"selectionsChanged",eventConverter:function(g,e){return e},customControlListener:function(config){var grid=config.control;grid.on("s")},setComponentProperty:function(value,oldValue,options,control){glu.log.info("selecting records on grid...");var sm=control.getSelectionModel();sm.silent=!0,sm.silent=!1}},selectionBindings:{eventName:"selectionsChanged",eventConverter:function(g,e){return e.length>0?e[e.length-1]:null},customControlListener:function(config){var grid=config.control;grid.on("s")},setComponentProperty:function(value,oldValue,options,control){glu.log.info("selecting records on grid...");var sm=control.getSelectionModel();sm.silent=!0,sm.silent=!1}},selectedBindings:{eventName:"selectionsChanged",eventConverter:function(g,e){return g._singleSelect?e.length>0?e[e.length-1]:null:e},customControlListener:function(config){var grid=config.control;grid.on("s")},setComponentProperty:function(value,oldValue,options,control){glu.log.info("selecting records on grid...");var sm=control.getSelectionModel();sm.silent=!0,sm.silent=!1}},focusBindings:{eventName:"focuschangerequest",eventConverter:function(g,r){return r},setComponentProperty:function(value,oldValue,options,control){control.getSelectionModel().setLastFocusedActual(value)}},columnFiltersBindings:{eventName:"filterupdate",eventConverter:function(gridfilter){for(var raw=gridfilter.getFilterData(),actual=[],i=0;raw.length>i;i++){var filter=raw[i];actual.push({field:filter.field,comparison:filter.data.comparison,value:filter.data.value})}return actual},setComponentProperty:function(filters,oldValue,options,grid){var filter,plugin=grid.filters;if(!plugin.settingglu){plugin.applyingState=!0,plugin.settingglu=!0,plugin.clearFilters();for(var i=0;filters.length>i;i++){var src=filters[i],key=src.field;filter=plugin.filters.get(key),filter&&(filter.setValue(src.value),filter.setActive(!0))}delete plugin.applyingState,delete plugin.settingglu}}}}),Ext.reg("checkboxsm",Ext.grid.CheckboxSelectionModel),Ext.reg("rowsm",Ext.grid.RowSelectionModel),glu.regAdapter("pagingtoolbar",{extend:"container",beforeCreate:function(config,viewmodel){config.paging&&config.paging.limit&&(config.pageSize=config.pageSize||config.paging.limit)},beforeCreate:function(config,viewmodel){config.paging&&config.paging.limit&&(config.pageSize=config.pageSize||config.paging.limit)},afterCreate:function(control,viewmodel){control.startIndex=control.startIndex||0,Ext.getVersion.major>3?control.addListener("beforechange",function(pager,page){return this.fireEvent("pagechanged",pager,page),!1},control):control.addListener("beforechange",function(pager,params){return this.startIndex=params[this.getParams().start],this.fireEvent("startindexchanged",pager,this.startIndex),!1},control),control.refresh||(control.refresh=control.items.getByKey("refresh")),(control.noRefresh||control.hideRefresh)&&control.refresh.hide(),control.refresh.handler=function(){this.refreshHandler&&this.refreshHandler(),this.fireEvent("refresh")},control.setPageSize=function(value){this.pageSize=value},Ext.getVersion().major>3||(control.store.un("load",control.onLoad,control),control.actualOnLoad=control.onLoad,control.onLoad=function(store,r,o){var keys=this.getParams();o.params={},o.params[keys.start]=this.startIndex,this.actualOnLoad(store,r,o)},control.store.on("load",control.onLoad,control),control.onLoad(control.store,[],{}))},storeBindings:{suppressViewmodelUpdate:!0},startIndexBindings:{eventName:"startindexchanged",eventConverter:function(pager,e){return e},setComponentProperty:function(value,oldValue,options,control){}},pageBindings:{eventName:"pagechanged",eventConverter:function(pager,e){return e},setComponentProperty:function(value,oldValue,options,control){}},defaultTypes:{items:"button"}}),glu.provider.adapters.pagingtoolbar=glu.provider.adapters.paging;